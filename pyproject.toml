[tool.poetry]
name = "API Template"
version = "0.5.0-beta0"
description = "Run 'api-admin custom metadata' to change this information."
authors = ["Grant Ramsay (seapagan) <seapagan@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
fastapi = "^0.99.1"
alembic = "^1.11.1"
asyncpg = "^0.28.0"
python-decouple = "^3.8"
psycopg2 = "^2.9.6"
PyJWT = "^2.7.0"
Jinja2 = "^3.1.2"
rich = "^13.4.2"
asyncclick = "^8.1.3.4"
anyio = "^3.7.1"
email-validator = "^1.3.1"
tomli = "^2.0.1"
tomli-w = "^1.0.0"
typer = { extras = ["all"], version = "^0.8.0" }
mkdocs = "^1.4.3"
mkdocstrings = { extras = ["python"], version = "^0.22.0" }
mkdocs-material = "^9.1.18"
poetry = "^1.5.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.16"}

[tool.poetry.dependencies.fastapi-mail]
extras = ["httpx"]
version = "^1.3.1"

[tool.poetry.dependencies.uvicorn]
extras = ["standard"]
version = "^0.23.0"

[tool.poetry.dependencies.passlib]
extras = ["bcrypt"]
version = "^1.7.4"

[tool.poetry.group.dev.dependencies]
openapi-readme = "^0.2.1"
aiosmtpd = "^1.4.4"
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
flake8-pyproject = "^1.2.3"
flake8-pytest-style = "^1.7.2"
black = "^23.7.0"
pep8-naming = "^0.13.3"
pylint = "^2.17.4"
pydocstyle = "^6.3.0"
pre-commit = "^3.3.3"
bandit = "^1.7.5"
poethepoet = "^0.21.1"
httpx = "0.23.3"
aiosqlite = "^0.19.0"
pytest = "^7.4.0"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.7"
pytest-randomly = "^3.13.0"
pytest-reverse = "^1.7.0"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.11.1"
pymdown-extensions = "^10.1"
pygments = "^2.15.1"
mkdocs-swagger-ui-tag = "^0.6.2"
mock = "^5.1.0"
faker = "^19.1.0"
mkdocs-git-revision-date-localized-plugin = "^1.2.0"
mkdocs-minify-plugin = "^0.6.4"
mkdocs-latest-git-tag-plugin = "^0.1.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
serve = "uvicorn main:app --reload"
pre = "pre-commit run --all-files"
lint = "pylint **/*.py"
_publish_docs = "mkdocs gh-deploy"
_build_docs = "mkdocs build"
openapi = "./api-admin docs openapi --prefix=docs/reference"
"docs:publish"= ["openapi", "_publish_docs"]
"docs:build" = ["openapi", "_build_docs"]
"docs:serve" = "mkdocs serve -a 0.0.0.0:9000"

[tool.flake8]
exclude = ["__init__.py", ".git", "app/migrations/versions/*", "old_tests/*"]
max-line-length = 80
docstring-convention = "google"

[tool.bandit]
exclude_dirs = ["config/settings.py", "schemas/examples.py"]

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

[tool.pydocstyle]
# add-ignore = ["D104"]

[tool.pytest.ini_options]
# addopts = [
#   "--cov",
#   "--cov-report", "term-missing",
#   "--cov-report", "html",
#   ]
# norecursedirs = "old_tests/*"
filterwarnings = [
  "ignore:'crypt' is deprecated:DeprecationWarning",
]
# mock_use_standalone_module = true
markers = [
  "unit: Unit tests",
  "integration: Integration tests",
]
testpaths = ["tests"]

[tool.coverage.run]
# source = []
omit = ["*/tests/*"]
