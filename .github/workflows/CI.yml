name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      # ---------------------------------------------------------------------- #
      #                     checkout repo and setup Python                     #
      # ---------------------------------------------------------------------- #
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # ---------------------------------------------------------------------- #
      #                      install and configure poetry                      #
      # ---------------------------------------------------------------------- #
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # ---------------------------------------------------------------------- #
      #                    load cached venv if cache exists                    #
      # ---------------------------------------------------------------------- #
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version
            }}-${{ hashFiles('**/poetry.lock') }}
      # ---------------------------------------------------------------------- #
      #              install dependencies if cache does not exist              #
      # ---------------------------------------------------------------------- #
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # ---------------------------------------------------------------------- #
      #                               run Pytest                               #
      # ---------------------------------------------------------------------- #
      - name: Test with pytest
        run: |
          poetry run pytest
