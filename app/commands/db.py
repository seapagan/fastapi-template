"""CLI command to control the Database."""

from typing import Optional

import typer
from alembic import command
from alembic.config import Config
from rich import print  # pylint: disable=W0622

app = typer.Typer(no_args_is_help=True, rich_markup_mode="rich")

ALEMBIC_CFG = Config("alembic_scripting.ini")
DONE_MSG = "[green]Done!"


@app.command()
def init(
    force: Optional[bool] = typer.Option(
        False,
        "--force",
        "-f",
        prompt=(
            "Warning! This deletes all data in the database. Are you sure?"
        ),
        help="Do not ask for confirmation.",
    ),
) -> None:
    """Re-Initialise the database using Alembic.

    This will create the database if it does not exist, and run all migrations.
    If the database already exists, it will be dropped and recreated.
    """
    if force:
        print("\nInitialising Database ... ", end="")

        command.downgrade(ALEMBIC_CFG, "base")
        command.upgrade(ALEMBIC_CFG, "head")
        print(DONE_MSG)
    else:
        print("[cyan]Operation Cancelled.")


@app.command()
def drop(
    force: Optional[bool] = typer.Option(
        False,
        "--force",
        "-f",
        prompt=(
            "Warning! This deletes all data in the database. Are you sure?"
        ),
        help="Do not ask for confirmation.",
    ),
) -> None:
    """Drop all tables and reset the Database.

    This will delete all data from your Database!.
    """
    if force:
        print("\nDropping all tables ... ", end="")

        command.downgrade(ALEMBIC_CFG, "base")
        print(DONE_MSG)
    else:
        print("[cyan]Operation Cancelled.")


@app.command()
def upgrade() -> None:
    """Apply the latest Database Migrations."""
    print("\nUpgrading Database ... ", end="")

    command.upgrade(ALEMBIC_CFG, "head")
    print(DONE_MSG)


@app.command()
def revision(
    message: str = typer.Option(
        ...,
        "--message",
        "-m",
        prompt=("Enter the commit message for the revision"),
        help="Provide a message for this commit.",
    ),
) -> None:
    """Create a new revision.

    The revision will be created in the `alembic/versions` directory, and is
    autogenerated based on the current state of the database.
    """
    print()
    command.revision(ALEMBIC_CFG, message=message, autogenerate=True)
    command.upgrade(ALEMBIC_CFG, "head")
